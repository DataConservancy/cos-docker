#
#  Copyright 2016 Johns Hopkins University
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
FROM python:3.5-slim

MAINTAINER Data Conservancy <dc-ird@googlegroups.com>
LABEL description = "Provides runtime for Waterbutler"

# Expose each environment variable as a build argument
# This allows the author of docker-compose.yaml files
# to choose between 'build' or 'image' instructions
# and still set environment variables. (Setting
# environment variables are not supported when using
# the 'build' instruction).

ARG SHARED
ARG TMP
ARG CODE
ARG WHEELHOUSE
ARG WB_REPO
ARG WB_BRANCH

# Provide sane default values for environment
# variables, but prefer the ARG version if it
# is available.

ENV SHARED=${SHARED:-/shared} TMP=${TMP:-/tmp}
ENV CODE=${CODE:-${SHARED}/code/waterbutler} \
    WHEELHOUSE=${WHEELHOUSE:-${SHARED}/wheelhouse/27} \
    WB_REPO=${WB_REPO:-https://github.com/emetsger/waterbutler}  \
    WB_BRANCH=${WB_BRANCH:-docker-support}

# Python Invoke configuration
# - avoids configuring a pty, to avoid unicode encoding errors like:
#   "UnicodeEncodeError: 'ascii' codec can't encode characters in position 18-20: ordinal not in range(128)"

COPY invoke.yaml ${TMP}

RUN mkdir -p ${CODE}

WORKDIR ${CODE}

RUN \

    apt-get update \
    && apt-get install -y \
        git \
        par2 \
        libevent-dev \
        libxml2-dev \
        libxslt1-dev \
        zlib1g-dev \
        # cryptography
        build-essential \
        libssl-dev \
        libffi-dev \
        python-dev \
    && apt-get clean \
    && apt-get autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# grab gosu for easy step-down from root
ENV GOSU_VERSION 1.4
RUN apt-get update \
    && apt-get install -y \
        curl \
    && gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
    && curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
  	&& curl -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc" \
  	&& gpg --verify /usr/local/bin/gosu.asc \
  	&& rm /usr/local/bin/gosu.asc \
  	&& chmod +x /usr/local/bin/gosu \
    && apt-get clean \
    && apt-get autoremove -y \
        curl \
    && rm -rf /var/lib/apt/lists/*

RUN pip install -U invoke==0.12.2 wheel


RUN \
    # Clone the WB git repository, which contains the requirements being
    # installed
    git clone -b $WB_BRANCH $WB_REPO .

RUN \
    #pip install -U invoke wheel
    WHEELHOUSE=${WHEELHOUSE} PYTHONIOENCODING="utf_8:ignore" \
    invoke -f ${TMP}/invoke.yaml wheelhouse --develop --no-pty

RUN \
    WHEELHOUSE=${WHEELHOUSE} PYTHONIOENCODING="utf_8:ignore" \
    invoke -f ${TMP}/invoke.yaml install --develop --no-pty

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT [ "/entrypoint.sh" ]

EXPOSE 7777

CMD [ "invoke", "server" ]
